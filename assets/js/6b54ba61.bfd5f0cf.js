"use strict";(self.webpackChunkmy_docusaurus_blog=self.webpackChunkmy_docusaurus_blog||[]).push([[704],{15680:(e,r,t)=>{t.d(r,{xA:()=>u,yg:()=>g});var n=t(96540);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function l(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function s(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var i=n.createContext({}),c=function(e){var r=n.useContext(i),t=r;return e&&(t="function"==typeof e?e(r):l(l({},r),e)),t},u=function(e){var r=c(e.components);return n.createElement(i.Provider,{value:r},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},m=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=c(t),m=o,g=d["".concat(i,".").concat(m)]||d[m]||p[m]||a;return t?n.createElement(g,l(l({ref:r},u),{},{components:t})):n.createElement(g,l({ref:r},u))}));function g(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=t.length,l=new Array(a);l[0]=m;var s={};for(var i in r)hasOwnProperty.call(r,i)&&(s[i]=r[i]);s.originalType=e,s[d]="string"==typeof e?e:o,l[1]=s;for(var c=2;c<a;c++)l[c]=t[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},64744:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>i,contentTitle:()=>l,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var n=t(58168),o=(t(96540),t(15680));const a={},l="leetCode",s={unversionedId:"algorithm/leet-code",id:"algorithm/leet-code",title:"leetCode",description:"https://leetcode.com/",source:"@site/docs/algorithm/leet-code.mdx",sourceDirName:"algorithm",slug:"/algorithm/leet-code",permalink:"/docs/algorithm/leet-code",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"\u57fa\u7840\u7b97\u6cd5",permalink:"/docs/algorithm/basic"},next:{title:"\u6811",permalink:"/docs/algorithm/tree"}},i={},c=[{value:"Hard",id:"hard",level:2},{value:"Medium",id:"medium",level:2},{value:"Add two Numbers",id:"add-two-numbers",level:3},{value:"Easy",id:"easy",level:2},{value:"Two sum",id:"two-sum",level:3}],u={toc:c},d="wrapper";function p(e){let{components:r,...t}=e;return(0,o.yg)(d,(0,n.A)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,o.yg)("h1",{id:"leetcode"},"leetCode"),(0,o.yg)("p",null,(0,o.yg)("a",{parentName:"p",href:"https://leetcode.com/"},"https://leetcode.com/")),(0,o.yg)("h2",{id:"hard"},"Hard"),(0,o.yg)("h2",{id:"medium"},"Medium"),(0,o.yg)("h3",{id:"add-two-numbers"},(0,o.yg)("a",{parentName:"h3",href:"https://leetcode.com/problems/add-two-numbers/"},"Add two Numbers")),(0,o.yg)("admonition",{type:"note"},(0,o.yg)("p",{parentName:"admonition"},"\u56e0\u4e3a\u8fd9\u9053\u9898\u7684\u5165\u53c2\u548c\u51fa\u53c2\u90fd\u662f\u8981\u6c42\u4e3a ListNode \u683c\u5f0f, \u4f46\u662f\u5b9e\u73b0\u8d77\u6765\u4ee5\u6570\u7ec4\u7684\u65b9\u5f0f\u597d\u5b9e\u73b0\uff0c\u6240\u4ee5\u5c31\u6709\u4e00\u4e2a ",(0,o.yg)("inlineCode",{parentName:"p"},"arr2ListNode")," \u548c ",(0,o.yg)("inlineCode",{parentName:"p"},"ListNode2Arr")," \u7684\u8f6c\u6362\u3002\n\u8981\u6ce8\u610f\u4e00\u4e0b\u9898\u76ee\u7684\u6ce8\u91ca\u91cc\u5199\u4e86\u94fe\u8868\u7684\u503c\uff0ckey \u4e3a",(0,o.yg)("inlineCode",{parentName:"p"},"val"),"\u800c\u4e0d\u662f",(0,o.yg)("inlineCode",{parentName:"p"},"value"),"\n\u8fd8\u6709\u4e00\u4e2a\u5751\u662f\uff0c\u8fd9\u91cc\u6d89\u53ca\u5230\u5927\u6570\u7684\u8ba1\u7b97\uff0c\u6240\u4ee5\u5728\u505a\u52a0\u6cd5\u7684\u65f6\u5019\u9700\u8981\u8003\u8651\u4e00\u4e9b\u6781\u9650\u60c5\u51b5\n\u5173\u4e8e ListNode \u7684\u89e3\u91ca\u53ef\u4ee5\u770b\u8fd9\u91cc // TODO: \u5f85\u8865\u5145")),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js",metastring:'title="testcase"',title:'"testcase"'},"const plus1 = [\n  1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 1,\n];\nconst plus2 = [5, 6, 4];\n")),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},"const ListNode2Arr = (listNode) => {\n  if (!listNode) {\n    return [];\n  }\n  const arr = [listNode.val];\n  const restArr = ListNode2Arr(listNode.next);\n  return arr.concat(restArr);\n};\n\nconst arr2ListNode = (arr) => {\n  if (!arr.length) {\n    return null;\n  }\n  const head = { val: arr[0], next: null };\n  let preNode = head;\n  for (let i = 1; i < arr.length; i++) {\n    const curNode = { val: arr[i], next: null };\n    preNode.next = curNode;\n    preNode = curNode;\n  }\n  return head;\n};\n\nconst addTwoNumbers = function (l1, l2) {\n  const arrReverse = (arr) => arr.map(arr.pop, [...arr]);\n  const getPlus = (arr) =>\n    arr.reduce(\n      (pre, cur, index, origin) =>\n        pre + BigInt(cur) * BigInt(10) ** BigInt(origin.length - index - 1),\n      BigInt(0)\n    );\n  const reverse1 = arrReverse(ListNode2Arr(l1));\n  const reverse2 = arrReverse(ListNode2Arr(l2));\n  const plus1 = getPlus(reverse1);\n  const plus2 = getPlus(reverse2);\n  const res = arrReverse(`${plus1 + plus2}`.split('')).map((item) =>\n    Number(item)\n  );\n  console.log({\n    list2arr: ListNode2Arr(l1),\n    reverse1,\n    reverse2,\n    plus1,\n    plus2,\n    res1111: res,\n  });\n  return arr2ListNode(res);\n};\n")),(0,o.yg)("h2",{id:"easy"},"Easy"),(0,o.yg)("h3",{id:"two-sum"},(0,o.yg)("a",{parentName:"h3",href:"https://leetcode.com/problems/two-sum/"},"Two sum")),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},"const twoSum = function (nums, target) {\n  for (let i = 0; i < nums.length; i++) {\n    const res = nums.find((item) => item === target - nums[i]);\n    if (typeof res === 'number' && i !== nums.lastIndexOf(res)) {\n      return [i, nums.lastIndexOf(res)];\n    }\n  }\n};\nconsole.log(twoSum([3, 2, 4], 6));\n")))}p.isMDXComponent=!0}}]);