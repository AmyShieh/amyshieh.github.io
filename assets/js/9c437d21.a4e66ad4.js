"use strict";(self.webpackChunkmy_docusaurus_blog=self.webpackChunkmy_docusaurus_blog||[]).push([[7570],{13898:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>o,contentTitle:()=>r,default:()=>p,frontMatter:()=>l,metadata:()=>g,toc:()=>s});var n=t(58168),i=(t(96540),t(15680));const l={},r="git",g={unversionedId:"engineer/git",id:"engineer/git",title:"git",description:"basic",source:"@site/docs/engineer/git.md",sourceDirName:"engineer",slug:"/engineer/git",permalink:"/docs/engineer/git",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"\u51fd\u6570\u5f0f\u7f16\u7a0b",permalink:"/docs/engineer/functional-thinking"},next:{title:"linux command",permalink:"/docs/engineer/linux-command"}},o={},s=[{value:"basic",id:"basic",level:2},{value:"commit vs commit -a",id:"commit-vs-commit--a",level:3},{value:"command",id:"command",level:2},{value:"push",id:"push",level:3},{value:"merge",id:"merge",level:3},{value:"commit",id:"commit",level:3},{value:"remote version",id:"remote-version",level:3},{value:"branch delete",id:"branch-delete",level:3},{value:"SSH",id:"ssh",level:2},{value:"\u751f\u6210\u79d8\u94a5",id:"\u751f\u6210\u79d8\u94a5",level:3},{value:"shortcut",id:"shortcut",level:2},{value:"windows",id:"windows",level:3},{value:"mac",id:"mac",level:3},{value:"private key",id:"private-key",level:2}],m={toc:s},c="wrapper";function p(e){let{components:a,...t}=e;return(0,i.yg)(c,(0,n.A)({},m,t,{components:a,mdxType:"MDXLayout"}),(0,i.yg)("h1",{id:"git"},"git"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-shell"},"\ngit config user.name aliveAmy\ngit config user.email aliveAmy719@gmail.com\ngit remote add aliveAmy \ngp aliveAmy master \n")),(0,i.yg)("h2",{id:"basic"},"basic"),(0,i.yg)("h3",{id:"commit-vs-commit--a"},"commit vs commit -a"),(0,i.yg)("p",null,"-a:"),(0,i.yg)("ol",null,(0,i.yg)("li",{parentName:"ol"},"git add"),(0,i.yg)("li",{parentName:"ol"},"\u81ea\u52a8\u5220\u9664\u5728 index file \u4e2d\uff0c\u4f46\u662f\u4e0d\u5728\u5de5\u4f5c\u6811\u4e2d\u7684\u6587\u4ef6"),(0,i.yg)("li",{parentName:"ol"},"commit")),(0,i.yg)("p",null,"\u7ed3\u8bba\uff1a git commit -a === git add . && git commit"),(0,i.yg)("h2",{id:"command"},"command"),(0,i.yg)("h3",{id:"push"},"push"),(0,i.yg)("admonition",{title:"443 || 10054",type:"danger"},(0,i.yg)("p",{parentName:"admonition"},"Failed to connect to github.com port 443: Timed out\n||\nOpenSSL SSL_read: Connection was reset, errno 10054")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-shell"},'git config --global http.proxy ""\n')),(0,i.yg)("p",null,"\u5982\u679c\u8fd8\u662f\u4e0d\u80fd\u89e3\u51b3"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-shell"},"git config --global http.sslverify false\n")),(0,i.yg)("h3",{id:"merge"},"merge"),(0,i.yg)("p",null,(0,i.yg)("inlineCode",{parentName:"p"},"git merge"),"\u547d\u4ee4\u7684\u8bed\u6cd5\u662f\uff0c\u5c06\u6307\u5b9a\u5206\u652f\u5408\u5e76\u5230\u5f53\u524d\u6240\u5728\u5206\u652f\u3002\n\u6240\u4ee5\u628a ",(0,i.yg)("inlineCode",{parentName:"p"},"a")," \u5206\u652f\u7684\u5185\u5bb9\u5408\u5e76\u5230 ",(0,i.yg)("inlineCode",{parentName:"p"},"b"),"\u5206\u652f\u65f6\uff0c\u9700\u8981\u5207\u5230",(0,i.yg)("inlineCode",{parentName:"p"},"b"),"\u5206\u652f\uff0c\u6267\u884c",(0,i.yg)("inlineCode",{parentName:"p"},"git merge a"),"\u3002"),(0,i.yg)("h3",{id:"commit"},"commit"),(0,i.yg)("admonition",{title:"LF & CRLF",type:"danger"},(0,i.yg)("p",{parentName:"admonition"},"fatal: LF would be replaced by CRLF in some file")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-shell"},"git config --global core.safecrlf false\n")),(0,i.yg)("br",null),(0,i.yg)("admonition",{title:"\u63d0\u4ea4\u90ae\u7bb1\u6821\u9a8c",type:"note"},(0,i.yg)("p",{parentName:"admonition"},"\u9700\u8981\u4fee\u6539\u6700\u8fd1\u4e00\u6b21\u7684 commit author")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-shell"},'git commit --amend --author="aliveAmy <aliveAmy719@gmail.com>"\n')),(0,i.yg)("h3",{id:"remote-version"},"remote version"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"check remote version")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-shell"},"git remote -v\n")),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"add remote version")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-shell"},"git remote add [origin or someveriosn name]\n")),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"remove remote version")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-shell"},"git remote remove [origin or someversion name]\n")),(0,i.yg)("h3",{id:"branch-delete"},"branch delete"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-shell"},"// delete locally\ngit branch -d localBranchName\n\n// delete remotely\ngit push origin --delete remoteBranch\n\n")),(0,i.yg)("h2",{id:"ssh"},"SSH"),(0,i.yg)("h3",{id:"\u751f\u6210\u79d8\u94a5"},"\u751f\u6210\u79d8\u94a5"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-shell"},"  ssh-keygen -t rsa -C aliveamy719@gmail.com\n")),(0,i.yg)("h2",{id:"shortcut"},"shortcut"),(0,i.yg)("h3",{id:"windows"},"windows"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-js",metastring:'title=".bashrc"',title:'".bashrc"'},"alias g='git'\nalias gst='git status'\nalias gd='git diff'\nalias gdc='git diff --cached'\nalias gl='git pull'\nalias gup='git pull --rebase'\nalias gp='git push'\nalias gd='git diff'\nalias gc='git commit -v'\nalias gc!='git commit -v --amend'\nalias gca='git commit -v -a'\nalias gca!='git commit -v -a --amend'\nalias gcmsg='git commit -m'\nalias gco='git checkout'\nalias gcm='git checkout master'\nalias gr='git remote'\nalias grv='git remote -v'\nalias grmv='git remote rename'\nalias grrm='git remote remove'\nalias grset='git remote set-url'\nalias grup='git remote update'\nalias grbi='git rebase -i'\nalias grbc='git rebase --continue'\nalias grba='git rebase --abort'\nalias gb='git branch'\nalias gba='git branch -a'\nalias gcount='git shortlog -sn'\nalias gcl='git clone'\nalias gcp='git cherry-pick'\nalias glg='git log --stat --max-count=10'\nalias glgg='git log --graph --max-count=10'\nalias glgga='git log --graph --decorate --all'\nalias glo='git log --oneline --decorate --color'\nalias glog='git log --oneline --decorate --color --graph'\nalias gss='git status -s'\nalias ga='git add'\nalias gm='git merge'\nalias grh='git reset HEAD'\nalias grhh='git reset HEAD --hard'\nalias gclean='git reset --hard && git clean -dfx'\nalias gwc='git whatchanged -p --abbrev-commit --pretty=medium'\n\n#remove the gf alias\n#alias gf='git ls-files | grep'\n\nalias gpoat='git push origin --all && git push origin --tags'\nalias gmt='git mergetool --no-prompt'\n\nalias gg='git gui citool'\nalias gga='git gui citool --amend'\nalias gk='gitk --all --branches'\n\nalias gsts='git stash show --text'\nalias gsta='git stash'\nalias gstp='git stash pop'\nalias gstd='git stash drop'\n\n# Will cd into the top of the current repository\n# or submodule.\nalias grt='cd $(git rev-parse --show-toplevel || echo \".\")'\n\n# Git and svn mix\nalias git-svn-dcommit-push='git svn dcommit && git push github master:svntrunk'\n\nalias gsr='git svn rebase'\nalias gsd='git svn dcommit'\n")),(0,i.yg)("h3",{id:"mac"},"mac"),(0,i.yg)("p",null,"\u76f4\u63a5\u4e0a zsh~"),(0,i.yg)("h2",{id:"private-key"},"private key"))}p.isMDXComponent=!0},15680:(e,a,t)=>{t.d(a,{xA:()=>m,yg:()=>d});var n=t(96540);function i(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function l(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function r(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?l(Object(t),!0).forEach((function(a){i(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function g(e,a){if(null==e)return{};var t,n,i=function(e,a){if(null==e)return{};var t,n,i={},l=Object.keys(e);for(n=0;n<l.length;n++)t=l[n],a.indexOf(t)>=0||(i[t]=e[t]);return i}(e,a);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)t=l[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var o=n.createContext({}),s=function(e){var a=n.useContext(o),t=a;return e&&(t="function"==typeof e?e(a):r(r({},a),e)),t},m=function(e){var a=s(e.components);return n.createElement(o.Provider,{value:a},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},u=n.forwardRef((function(e,a){var t=e.components,i=e.mdxType,l=e.originalType,o=e.parentName,m=g(e,["components","mdxType","originalType","parentName"]),c=s(t),u=i,d=c["".concat(o,".").concat(u)]||c[u]||p[u]||l;return t?n.createElement(d,r(r({ref:a},m),{},{components:t})):n.createElement(d,r({ref:a},m))}));function d(e,a){var t=arguments,i=a&&a.mdxType;if("string"==typeof e||i){var l=t.length,r=new Array(l);r[0]=u;var g={};for(var o in a)hasOwnProperty.call(a,o)&&(g[o]=a[o]);g.originalType=e,g[c]="string"==typeof e?e:i,r[1]=g;for(var s=2;s<l;s++)r[s]=t[s];return n.createElement.apply(null,r)}return n.createElement.apply(null,t)}u.displayName="MDXCreateElement"}}]);